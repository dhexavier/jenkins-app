pipeline {
    agent {
        docker {
            image 'maven:latest' // Use the Docker image
            args '-v /var/run/docker.sock:/var/run/docker.sock --entrypoint=""' // Remove entrypoint to use the default command
        }
    }
    environment {
        SHELL = "/bin/bash" // Explicitly setting the shell path
        PATH = "/bin:/usr/bin:/usr/local/bin:$PATH"
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/dhexavier/jenkins-app.git'
            }
        }
        stage('Build and Test') {
            steps {
                sh '''
                    echo "Current PATH: $PATH"
                    echo "JAVA_HOME before update: $JAVA_HOME"
                    JAVA_BIN=$(which java)
                    export JAVA_HOME=$(dirname $(dirname $(readlink -f $JAVA_BIN)))
                    echo "JAVA_HOME after update: $JAVA_HOME"
                    
                    # Use a local Maven repository in the workspace
                    mvn -Dmaven.repo.local=$WORKSPACE/.m2/repository clean package
                '''
            }
        }
        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "dhexavier1/jenkins-app:${BUILD_NUMBER}"
                REGISTRY_CREDENTIALS = credentials('docker-cred')
            }
            steps {
                script {
                    sh '''
                        echo "Building Docker image"
                        docker build -t ${DOCKER_IMAGE} .
                        docker push ${DOCKER_IMAGE}
                    '''
                }
            }
        }
        stage('Update Deployment File') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'github-cred', variable: 'GITHUB_TOKEN')]) {
                        sh '''
                            echo "Updating deployment file"
                            sed -i '' 's|replaceImageTag|${BUILD_NUMBER}|g' java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                            git config user.email "testpen008@gmail.com"
                            git config user.name "DheXavier"
                            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                        '''
                    }
                }
            }
        }
    }
}
